apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: terraform
spec:
  entrypoint: update
  arguments:
    parameters:
    - name: terraform-docker-image
      value: "hashicorp/terraform:1.4"
    - name: terraform-script-repository
      value: "https://github.com/cisco-dcloud/argo-workflows-templates.git"
    - name: terraform-script-path
      value: "terraform_examples/random"      

  templates:
    - name: plan
      inputs:
        artifacts:
        - name: terraform
          path: /home/terraform
          git:
            repo: "{{workflow.parameters.terraform-script-repository}}"
            depth: 1
        parameters:
        - name: terraform-script-path
          value: "{{workflow.parameters.terraform-script-path}}" 
      script:
        imagePullPolicy: "Always"
        image: "{{workflow.parameters.terraform-docker-image}}"
        command: ["sh"]
        source: |
          mkdir /home/current
          cp /home/terraform/{{inputs.parameters.terraform-script-path}}/*.tf /home/current
          cd /home/current
          /bin/terraform init -input=false
          /bin/terraform plan -parallelism=2 -input=false -no-color -out=/tmp/tfclientsplan >> /tmp/terraform-change.log
      outputs:
        artifacts:
          - name: terraform-plan
            path: /tmp/tfclientsplan
            archive:
              none: {}
          - name: terraform-log
            path: /tmp/terraform-change.log
            archive:
              none: {}
    - name: apply
      inputs:
        artifacts:
        - name: terraform-plan
          path: /home/terraform/tfclientsplan
      script:
        imagePullPolicy: "Always"
        image: "{{workflow.parameters.terraform-docker-image}}"
        command: ["sh"]
        source: |
          cd /home/terraform
          ls -la
          /bin/terraform apply -input=false -parallelism=2 -no-color tfclientsplan

    - name: approve
      suspend: {}

    - name: update
      dag:
        tasks:
          - name: plan
            template: plan
          - name: approve
            dependencies: [plan]
            template: approve
          - name: apply
            template: apply
            dependencies: [plan, approve]
            arguments:
              artifacts:
              - name: terraform-plan
                from: "{{tasks.plan.outputs.artifacts.terraform-plan}}"

    - name: update-auto-approve
      dag:
        tasks:
          - name: plan
            template: plan
          - name: apply
            template: apply
            dependencies: [plan]
            arguments:
              artifacts:
              - name: terraform-plan
                from: "{{tasks.plan.outputs.artifacts.terraform-plan}}"